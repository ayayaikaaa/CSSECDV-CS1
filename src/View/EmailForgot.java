/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import javax.swing.*;
import java.awt.*;
import java.util.Properties;
import javax.mail.*;
import javax.mail.internet.*;
import java.util.Random;
/**
 *
 * @author Avin
 */
public class EmailForgot extends javax.swing.JPanel {

    /**
     * Creates new form emailForgot
     */
    private String generatedOTP;
    
    public Frame frame;
    
    public EmailForgot() {
        initComponents();
    }
       public void clearForgotFields() {
        otpFld.setText(null);
        validationLabel.setText(null);
        otpBtn.setEnabled(false);
        emailFld.setText(null);
        usernameFld.setText(null);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        emailFld = new javax.swing.JTextField();
        verifyBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        validationLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        otpFld = new javax.swing.JTextField();
        otpBtn = new javax.swing.JButton();
        usernameFld = new javax.swing.JTextField();

        setMaximumSize(new java.awt.Dimension(767, 473));
        setMinimumSize(new java.awt.Dimension(767, 473));
        setPreferredSize(new java.awt.Dimension(767, 473));

        setMaximumSize(new java.awt.Dimension(767, 473));
        setMinimumSize(new java.awt.Dimension(767, 473));
        setPreferredSize(new java.awt.Dimension(767, 473));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SECURITY Svcs");

        usernameFld.setBackground(new java.awt.Color(240, 240, 240));
        usernameFld.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        usernameFld.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        usernameFld.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "USERNAME", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        usernameFld.setMaximumSize(new java.awt.Dimension(64, 45));

        usernameFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameFldKeyRelease(evt);
            }
        });

        emailFld.setBackground(new java.awt.Color(240, 240, 240));
        emailFld.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        emailFld.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        emailFld.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "EMAIL", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        emailFld.setMaximumSize(new java.awt.Dimension(64, 45));
        emailFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailFldActionPerformed(evt);
            }
        });
        emailFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailFldKeyReleased(evt);
            }
        });

        verifyBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        verifyBtn.setText("VERIFY");
        verifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyBtnActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        backBtn.setText("<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Enter EMAIL to RESET PASSWORD");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Enter EMAIL to RESET PASSWORD");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        otpFld.setBackground(new java.awt.Color(240, 240, 240));
        otpFld.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        otpFld.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        otpFld.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "OTP", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        otpFld.setMaximumSize(new java.awt.Dimension(64, 45));
        otpFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otpFldActionPerformed(evt);
            }
        });
        otpFld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                otpFldKeyReleased(evt);
            }
        });

        otpBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        otpBtn.setText("SEND OTP");
        otpBtn.setEnabled(false);
        otpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otpBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);

        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(backBtn)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap(100, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(usernameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(emailFld, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(otpFld, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(18, 18, 18)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(verifyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(otpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(validationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(118, Short.MAX_VALUE))

        );

        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(backBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jLabel2)
                                .addComponent(usernameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(emailFld, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(otpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(validationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(verifyBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(otpFld, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(111, Short.MAX_VALUE))

        );




    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        frame.loginNav();
        clearForgotFields();
        clearForgotFields();
    }//GEN-LAST:event_backBtnActionPerformed

    private void verifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyBtnActionPerformed
        String enteredOTP = otpFld.getText();
        String email = emailFld.getText();

        if (enteredOTP.equals(generatedOTP) && matchEmail(emailFld.getText().toLowerCase(), usernameFld.getText().toLowerCase())) {

            JOptionPane.showMessageDialog(this, "OTP Verified Successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            clearForgotFields();
            frame.resetNav(email);
        } else {
            JOptionPane.showMessageDialog(this, "OTP Verification Failed", "Error", JOptionPane.ERROR_MESSAGE);
            clearForgotFields();

        }
    }//GEN-LAST:event_verifyBtnActionPerformed

    private void emailFldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailFldKeyReleased
        String email = emailFld.getText();
        if (!email.equals("")) {
            if (isValidEmail(email) && !usernameFld.getText().equalsIgnoreCase("admin") && !usernameFld.getText().equalsIgnoreCase("manager")) {
                validationLabel.setText(""); // Clear any validation message
                verifyBtn.setEnabled(true);
                otpBtn.setEnabled(true); // Enable the submit button
            } else {
                validationLabel.setText("Invalid Credentials"); // Display validation message

                validationLabel.setForeground(Color.RED);
                verifyBtn.setEnabled(false);
                otpBtn.setEnabled(false); // Disable the submit button
            }
        } else {
            validationLabel.setText(""); // Clear any validation message
            validationLabel.setForeground(Color.RED);
            verifyBtn.setEnabled(false);
            otpBtn.setEnabled(false); // Disable the submit button if the field is empty
        }
    }//GEN-LAST:event_emailFldKeyReleased

    private void usernameFldKeyRelease(java.awt.event.KeyEvent evt){
        String email = emailFld.getText();
        if(usernameFld.getText().equalsIgnoreCase("admin") || usernameFld.getText().equalsIgnoreCase("manager") || email.equals("")){
            verifyBtn.setEnabled(false);
            otpBtn.setEnabled(false);
        }else{
            verifyBtn.setEnabled(true);
            otpBtn.setEnabled(true);
        }
    }

    private void emailFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailFldActionPerformed

    private void otpFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otpFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otpFldActionPerformed

    private void otpFldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_otpFldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_otpFldKeyReleased

    private void otpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otpBtnActionPerformed
        String email = emailFld.getText();
        if (isValidEmail(email)) {
            generatedOTP = generateOTP();
            if(frame.check(email)){
                sendOTPEmail(email, generatedOTP);
                JOptionPane.showMessageDialog(this, "If email is valid then OTP has been sent to your email.", "OTP Sent", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(this, "If valid then OTP has been sent to your email.", "OTP Sent", JOptionPane.INFORMATION_MESSAGE);
            }
                
        }
    }//GEN-LAST:event_otpBtnActionPerformed

    private boolean isValidEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        return email.matches(emailRegex);
    }
    
    private String generateOTP() {
        Random random = new Random();
        int otp = 100000 + random.nextInt(900000); // Generates a 6-digit OTP
        return String.valueOf(otp);
    }
    private void sendOTPEmail(String to, String otp) {
        final String username = "gcpaps2@gmail.com"; // Your email
        final String password = "zcdanwsymtiqohrk"; // Your email password

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");

        Session session = Session.getInstance(props,
            new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(username, password);
                }
            });

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress("your_email@gmail.com"));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            message.setSubject("Your OTP Code");
            message.setText("Dear User," + "\n\n Your OTP code is: " + otp);

            Transport.send(message);

            System.out.println("Email sent successfully");

        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }
    }

    private boolean matchEmail(String email, String username){
        try {
            if (this.frame.main.sqlite.getUser(username).getEmail().equals(email)) {
                return true;
            } else {
                return false;
            }
        }catch(Exception error){
            return false;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField emailFld;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton otpBtn;
    private javax.swing.JTextField otpFld;
    private javax.swing.JLabel validationLabel;
    private javax.swing.JButton verifyBtn;
    // End of variables declaration//GEN-END:variables

    private javax.swing.JTextField usernameFld;
}
